{"version":3,"sources":["img/makeup.svg","img/noimg.svg","components/ImageResult.js","components/FetchProduct.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ImageResult","imageListContent","items","this","props","react_default","a","createElement","className","map","item","key","id","lib_default","src","image_link","fallbackImage","noimg","initialImage","alt","name","brand","tag_list","tag","href","product_link","target","Component","FetchProduct","state","tagText","searchText","loading","apiUrl","handleInputChange","e","val","value","_this","setState","Object","defineProperty","axios","get","concat","then","res","data","catch","err","console","log","handleOptionChange","type","placeholder","onChange","src_components_ImageResult","App","logo","src_components_FetchProduct","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.acae3ebe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/makeup.8495d5d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/noimg.67edcff8.svg\";","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport noimg from \"../img/noimg.svg\";\nimport ReactImageFallback from \"react-image-fallback\";\nimport './ImageResult.css'\n\n\nclass ImageResult extends Component {\n    \n    render() {\n    let imageListContent;\n\n    const { items } = this.props;\n    if (items) {\n      imageListContent = (\n      <div className=\"layout\">\n        {items.map(item => (\n        <div key={item.id} className=\"item\">\n         <ul>\n        <ReactImageFallback\n\t\t\t\t\tsrc={item.image_link}\n\t\t\t\t\tfallbackImage={noimg}\n\t\t\t\t\tinitialImage=\"loader.gif\"\n\t\t\t\t\talt=\"Image should be here\"\n\t\t\t\t\tclassName=\"image-link\" />\n      \n         <li className=\"item-name\">{item.name}</li>\n         <li className=\"brand-name\">by {item.brand}</li>\n\n        \n        {/* tag_list is a list array and map trough each element here */}\n         {item.tag_list.map(tag => (\n           <li key={tag} className=\"tag-name\">{tag}</li>\n         ))}\n         <li className=\"link-btn\"><a href={item.product_link} target=\"_blank\">SHOP</a></li>\n    \n          </ul>\n\n          </div>\n        ))}\n        </div>\n        \n      );\n      } else {\n      imageListContent = null;\n    }\n\n\n    return (\n      <div>\n        {imageListContent}\n      \n      </div>\n    );\n    \n}}\n\n\nImageResult.propTypes = {\n items: PropTypes.array.isRequired\n};\nexport default ImageResult;","import React, { Component } from 'react';\nimport './FetchProduct.css';\nimport axios from \"axios\";\nimport ImageResult from \"./ImageResult\";\n\nclass FetchProduct extends Component {\n\nstate = {\n  tagText:\"\",\n  searchText: \"\",\n  loading: true,\n  apiUrl: \"http://makeup-api.herokuapp.com/api/v1/products.json\",\n  items: []\n};\n\n\nhandleInputChange= e =>{\n  const val = e.target.value;\n  this.setState({[e.target.name]: val },() => {\n    if(val === \"\"){\n      this.setState({items: []});\n    } else {\n      axios\n      .get(\n        `${this.state.apiUrl}?product_type=${this.state.searchText}&product_tags=${this.state.tagText}`\n      )\n      .then(res => this.setState({items: res.data}))\n      .catch(err => console.log(err));\n    }\n  });\n};\n\nhandleOptionChange= e =>{\n  const val = e.target.value;\n  this.setState({[e.target.name]: val },() => {\n    if(val === \"\"){\n      this.setState({items: []});\n    } else {\n      axios\n      .get(\n        `${this.state.apiUrl}?product_type=${this.state.searchText}&product_tags=${this.state.tagText}`\n      )\n      .then(res => this.setState({items: res.data}))\n      .catch(err => console.log(err));\n    }\n  });\n};\n\n\n  render() {\n\n    return (\n    <div className=\"search\">\n\n    <input name=\"searchText\" className=\"search-bar\" type=\"text\" placeholder=\"Search\" onChange={this.handleInputChange}/>\n       \n    <div className=\"category\">By Category</div>\n    <select className=\"select-bar\" name=\"tagText\" onChange={this.handleOptionChange}>\n    <option value=\"Not Selected\">Not Selected</option>\n    <option value=\"canadian\">Canadian</option>\n    <option value=\"certclean\">Cert Clean</option>\n    <option value=\"chemical free\">Chemical Free</option>\n    <option value=\"dairy free\">Dairy Free</option>\n    <option value=\"ewg verified\">EWG Verified</option>\n    <option value=\"ecocert\">Eco Cert</option>\n    <option value=\"fair trade\">Fair Trade</option>\n    <option value=\"gluten free\">Gluten Free</option>\n    <option value=\"hypoallergenic\">Hypoallergenic</option>\n    <option value=\"natural\">Natural</option>\n    <option value=\"No Talc\">No Talc</option>\n    <option value=\"organic\">Organic</option>\n    <option value=\"peanut free product\">Peanut Free Product</option>\n    <option value=\"sugar free\">Sugar Free</option>\n    <option value=\"usda organic\">USDA Organic</option>\n    <option value=\"vegan\">Vegan</option>\n    <option value=\"alcohol free\">Alcohol Free</option>\n    <option value=\"cruelty free\">Cruelty Free</option>\n    <option value=\"oil free\">Oil Free</option>\n    <option value=\"purpicks\">Purpicks</option>\n    <option value=\"silicone free\">Silicon Free</option>\n    <option value=\"water free\">Water Free</option>\n    \n\n    </select>  \n\n        <ImageResult items={this.state.items} />\n </div>\n    );\n  }\n}\n\nexport default FetchProduct;","import React, { Component } from 'react';\nimport logo from './img/makeup.svg'\nimport './App.css';\nimport FetchProduct from './components/FetchProduct';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"title-name\">Find My Cosmetics</h1>\n     \n          \n        </header>\n          <FetchProduct/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}